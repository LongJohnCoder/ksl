%{
--------------------------------------------------------------------------------
--
--  This file is part of the Doxyrest toolkit.
--
--  Doxyrest is distributed under the MIT license.
--  For details see accompanying license.txt file,
--  the public copy of which is also available at:
--  http://tibbo.com/downloads/archive/doxyrest/license.txt
--
--------------------------------------------------------------------------------

local argArray = table.pack (...)
local compound = argArray [1]
}
Typedefs
--------

%{
for i = 1, #compound.m_typedefArray do
	local item = compound.m_typedefArray [i]
	if isItemInCompoundDetails (item, compound) then
		emit (getItemRefTargetString (item))
}
.. ref-code-block:: $g_language
	:class: title-code-block

	$(getTypedefDeclString (item, false, "\t"))
%{
		if item.m_isSubGroupHead then
			local prevParamCount = 0
			if item.m_argString ~= "" and string.find (item.m_argString, ",") then
				prevParamCount = 2
			end

			for j = 1, #item.m_subGroupSlaveArray do
				slaveItem = item.m_subGroupSlaveArray [j]
				local paramCount = 0
				local extraSep = ""

				if slaveItem.m_argString ~= "" then
					if string.find (slaveItem.m_argString, ",") then
						paramCount = 2
					end

					if g_hasNewLineAfterReturnType or paramCount > 1 or prevParamCount > 1 then
						extraSep = "\n"
					end
				end
}
$extraSep	$(getTypedefDeclString (slaveItem, false, "\t"))
%{
				prevParamCount = paramCount
			end -- for
		end -- if
}

$(getItemDetailedDocumentation (item))

%{
	end -- if
end -- for
}
