%{
--------------------------------------------------------------------------------
--
--  This file is part of the Doxyrest toolkit.
--
--  Doxyrest is distributed under the MIT license.
--  For details see accompanying license.txt file,
--  the public copy of which is also available at:
--  http://tibbo.com/downloads/archive/doxyrest/license.txt
--
--------------------------------------------------------------------------------

local argArray = table.pack (...)
local compound = argArray [1]

local protectionKind = compound.m_typedefArray [1].m_protectionKind

if g_noProtectionSections and hasNonPublicItems (compound.m_typedefArray) then
}
	// $protectionKind typedefs

%{
else
}
	// typedefs

%{
end -- if

local prevParamCount = 0

for i = 1, #compound.m_typedefArray do
	local item = compound.m_typedefArray [i]

	local paramCount = 0
	local extraSep = ""

	if item.m_protectionKind ~= protectionKind then
		protectionKind = item.m_protectionKind
}

	// $protectionKind typedefs

%{
	end -- if

	-- currently getTypedefDeclString doesn't re-format argstring according to the current coding style
	-- so don't insert extra empty lines between mult-arg typedefs

	-- if item.m_argString ~= "" then
	-- 	if string.find (item.m_argString, ",") then
	-- 		paramCount = 2
	-- 	else
	-- 		paramCount = 0
	-- 	end

	--	if i > 1 and (g_hasNewLineAfterReturnType or paramCount > 1 or prevParamCount > 1) then
	--		extraSep = "\n"
	--	end
	-- end

	-- prevParamCount = paramCount
}
$extraSep	$(getTypedefDeclString (item, hasItemRefTarget (item), "\t"))
%{
end -- for
}
